apiVersion: apps/v1
kind: Deployment
metadata:
  name: invoker
  labels:
    app: invoker
    platform: oaas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: invoker
      platform: oaas
  template:
    metadata:
      labels:
        app: invoker
        platform: oaas
    spec:
      terminationGracePeriodSeconds: 60
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: invoker
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: invoker
          env:
            - name: ISPN_DNS_PING
              value: invoker-ping.oaas.svc.cluster.local
            - name: KUBERNETES_NAMESPACE
              value: oaas
            - name: ISPN_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OAAS_INVOKER_S3_URL
              value: 'http://${BUCKET_HOST}.cluster.local'
            - name: OAAS_INVOKER_S3_PUBLICURL
              value: 'http://${BUCKET_HOST}.cluster.local' # change here.
            - name: OAAS_INVOKER_S3_BUCKET
              value: '${BUCKET_NAME}'
            - name: OAAS_INVOKER_S3_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: oaas-bucket
            - name: OAAS_INVOKER_S3_SECRETKEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: oaas-bucket
          envFrom:
            - configMapRef:
                name: oaas-env
          image: ghcr.io/hpcclab/oaas/invoker:latest
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 11222
              name: infinispan
            - containerPort: 11223
              name: infinispan-adm
            - containerPort: 8888
              name: ping
          resources:
            limits:
              memory: 4G
#              cpu: '8'
            requests:
              cpu: '0.5'
              memory: 512M
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  name: invoker
  labels:
    app: invoker
spec:
  selector:
    app: invoker
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
    - name: infinispan
      protocol: TCP
      port: 11222
      targetPort: 11222

---
apiVersion: v1
kind: Service
metadata:
  name: invoker-ping
  labels:
    app: invoker
spec:
  clusterIP: None
  sessionAffinity: None
  type: ClusterIP
  selector:
    app: invoker
  ports:
    - name: ping
      protocol: TCP
      port: 8888
      targetPort: 8888
