---
openapi: 3.0.3
info:
  title: object-controller API
  version: 0.1.0-SNAPSHOT
paths:
  /api/functions:
    get:
      tags:
      - Function Service
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MscFunction'
    post:
      tags:
      - Function Service
      parameters:
      - name: update
        in: query
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MscFunction'
          text/x-yaml:
            schema:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MscFunction'
  /api/functions/{funcName}:
    get:
      tags:
      - Function Service
      parameters:
      - name: funcName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MscFunction'
  /api/objects:
    get:
      tags:
      - Object Service
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MscObject'
    post:
      tags:
      - Object Service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MscObject'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MscObject'
  /api/objects/{id}:
    get:
      tags:
      - Object Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MscObject'
  /api/objects/{id}/binds:
    post:
      tags:
      - Object Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MscObject'
  /api/objects/{id}/exec:
    post:
      tags:
      - Object Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionCallRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MscObject'
  /api/objects/{id}/exec-context:
    get:
      tags:
      - Object Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionExecContext'
  /api/objects/{id}/r-exec:
    post:
      tags:
      - Object Service
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionCallRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MscObject'
components:
  schemas:
    FunctionCallRequest:
      type: object
      properties:
        additionalInputs:
          type: array
          items:
            $ref: '#/components/schemas/ObjectId'
        args:
          type: object
          additionalProperties:
            type: string
        functionName:
          type: string
        target:
          $ref: '#/components/schemas/ObjectId'
    FunctionExecContext:
      type: object
      properties:
        additionalInputs:
          type: array
          items:
            $ref: '#/components/schemas/MscObject'
        args:
          type: object
          additionalProperties:
            type: string
        compound:
          $ref: '#/components/schemas/MscObject'
        function:
          $ref: '#/components/schemas/MscFunction'
        members:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MscObject'
        reactive:
          type: boolean
        subFunctions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MscFunction'
        target:
          $ref: '#/components/schemas/MscObject'
    MscFunction:
      type: object
      properties:
        additionalInputs:
          type: array
          items:
            $ref: '#/components/schemas/MscObjectRequirement'
        bindingRequirement:
          $ref: '#/components/schemas/MscObjectRequirement'
        name:
          type: string
        outputTemplate:
          $ref: '#/components/schemas/MscObjectTemplate'
        reactive:
          type: boolean
        subFunctions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SubFunctionCall'
        task:
          $ref: '#/components/schemas/TaskTemplate'
        type:
          $ref: '#/components/schemas/Type2'
    MscObject:
      type: object
      properties:
        functions:
          type: array
          items:
            type: string
        id:
          $ref: '#/components/schemas/ObjectId'
        labels:
          type: object
          additionalProperties:
            type: string
        members:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ObjectId'
        origin:
          $ref: '#/components/schemas/MscObjectOrigin'
        originHash:
          format: int64
          type: integer
        state:
          $ref: '#/components/schemas/MscObjectState'
        type:
          $ref: '#/components/schemas/Type'
    MscObjectOrigin:
      type: object
      properties:
        additionalInputRefs:
          type: array
          items:
            $ref: '#/components/schemas/ObjectId'
        args:
          type: object
          additionalProperties:
            type: string
        funcName:
          type: string
        parentId:
          $ref: '#/components/schemas/ObjectId'
        rootId:
          $ref: '#/components/schemas/ObjectId'
    MscObjectRequirement:
      type: object
      properties:
        requiredLabel:
          type: object
          additionalProperties:
            type: string
        requiredStateType:
          type: string
        requiredType:
          $ref: '#/components/schemas/Type'
    MscObjectState:
      type: object
      properties:
        baseUrl:
          type: string
        file:
          type: string
        files:
          type: array
          items:
            type: string
        groupId:
          type: string
        records:
          type: object
          additionalProperties:
            type: string
        type:
          $ref: '#/components/schemas/Type1'
    MscObjectTemplate:
      type: object
      properties:
        functions:
          type: array
          items:
            type: string
        id:
          $ref: '#/components/schemas/ObjectId'
        labels:
          type: object
          additionalProperties:
            type: string
        members:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ObjectId'
        origin:
          $ref: '#/components/schemas/MscObjectOrigin'
        originHash:
          format: int64
          type: integer
        state:
          $ref: '#/components/schemas/MscObjectState'
        type:
          $ref: '#/components/schemas/Type'
    ObjectId:
      type: object
      properties:
        timestamp:
          format: int32
          type: integer
        counter:
          format: int32
          type: integer
        randomValue1:
          format: int32
          type: integer
        randomValue2:
          type: integer
        date:
          format: date
          type: string
    SubFunctionCall:
      type: object
      properties:
        funcName:
          type: string
        inputRefs:
          type: array
          items:
            type: string
        target:
          type: string
    TaskTemplate:
      type: object
      properties:
        argsToEnv:
          type: boolean
        commands:
          type: array
          items:
            type: string
        containerArgs:
          type: array
          items:
            type: string
        image:
          type: string
        type:
          $ref: '#/components/schemas/Type3'
    Type:
      enum:
      - COMPOUND
      - RESOURCE
      type: string
    Type1:
      enum:
      - FILE
      - FILES
      - RECORD
      - SEGMENTABLE
      type: string
    Type2:
      enum:
      - LOGICAL
      - MACRO
      - TASK
      type: string
    Type3:
      enum:
      - DURABLE_WORKER
      - EPHEMERAL_WORKER
      - HTTP
      - LOGICAL
      type: string
