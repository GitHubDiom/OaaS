# Use postgres/example user/password credentials
version: '3.1'

services:

  arangodb:
    image: arangodb:3.10
    ports:
      - "8529:8529"
    environment:
      ARANGO_ROOT_PASSWORD: "changeme"
    volumes:
      - arango-data:/var/lib/arangodb3

  oc:
    depends_on:
      - arangodb
      - redpanda
#    image: ghcr.io/pawissanutt/oaas/object-controller
    build:
      context: object-controller
      dockerfile: src/main/docker/Dockerfile.jvm
#    restart: always
    ports:
      - "8088:8080"
    environment:
      QUARKUS_CONSOLE_COLOR: 'true'
      QUARKUS_HTTP_CORS: 'true'
      KAFKA_BOOTSTRAP_SERVERS: PLAINTEXT://redpanda:9092
      OAAS_OC_PROVISIONTOPIC: msc-provisions
      OAAS_OC_KAFKAENABLED: 'true'
      OAAS_OC_STORAGEADAPTERURL: http://sa:8080
      OAAS_REPO_ARG_HOST: arangodb
      OAAS_REPO_ARG_PORT: "8529"
      OAAS_REPO_ARG_DB: oaas
      OAAS_REPO_ARG_USER: root
      OAAS_REPO_ARG_PASS: changeme

  sa:
    build:
      context: storage-adapter
      dockerfile: src/main/docker/Dockerfile.jvm
#    image: ghcr.io/pawissanutt/oaas/storage-adapter
#    restart: always
    ports:
      - "8090:8080"
    environment:
      QUARKUS_CONSOLE_COLOR: 'true'
      OAAS_SA_S3_URL: http://s3:9000
      OAAS_SA_S3_BUCKET: oaas
      OAAS_SA_S3_ACCESSKEY: minio_access_key
      OAAS_SA_S3_SECRETKEY: minio_secret_key
      OAAS_SA_S3_PUBLICURL: http://localhost:9000
      OAAS_REPO_ARG_HOST: arangodb
      OAAS_REPO_ARG_PORT: "8529"
      OAAS_REPO_ARG_DB: oaas
      OAAS_REPO_ARG_USER: root
      OAAS_REPO_ARG_PASS: changeme

  redpanda:
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://redpanda:9092
    image: docker.vectorized.io/vectorized/redpanda:v21.10.2
    container_name: redpanda-1
    ports:
      - 9092:9092
      - 29092:29092

  s3:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      MINIO_ACCESS_KEY: minio_access_key
      MINIO_SECRET_KEY: minio_secret_key
      MINIO_API_CORS_ALLOW_ORIGIN: '*'
    command: server --address 0.0.0.0:9000 --console-address ":9001" /data

  invoker:
#    restart: always
    depends_on:
      - arangodb
      - redpanda
#    image: ghcr.io/pawissanutt/oaas/invoker
    build:
      context: invoker
      dockerfile: src/main/docker/Dockerfile.jvm
    deploy:
      replicas: 1
    ports:
      - "8089:8080"
    environment:
      QUARKUS_CONSOLE_COLOR: 'true'
      QUARKUS_HTTP_CORS: 'true'
      OAAS_INVOKER_KAFKA: PLAINTEXT://redpanda:9092
      OAAS_INVOKER_STORAGEADAPTERURL: http://sa:8080
      OAAS_ISPN_ARGCONNECTION_HOST: arangodb
      OAAS_ISPN_ARGCONNECTION_PORT: "8529"
      OAAS_ISPN_ARGCONNECTION_DB: oaas
      OAAS_ISPN_ARGCONNECTION_USER: root
      OAAS_ISPN_ARGCONNECTION_PASS: changeme
      OAAS_INVOKER_S3_URL: http://s3:9000
      OAAS_INVOKER_S3_BUCKET: oaas
      OAAS_INVOKER_S3_ACCESSKEY: minio_access_key
      OAAS_INVOKER_S3_SECRETKEY: minio_secret_key
      OAAS_INVOKER_S3_PUBLICURL: http://localhost:9000
      OAAS_INVOKER_USESA: "false"

  json-update-fn:
    build:
      context: example/functions/json-update-fn-py
#    image: ghcr.io/pawissanutt/oaas/json-update-fn-py

  concat-fn:
    build:
      context: example/functions/concat-fn-py
#    image: ghcr.io/pawissanutt/oaas/concat-fn-py

  transcode-fn:
    build:
      context: example/functions/transcode-fn-py
#    image: ghcr.io/pawissanutt/oaas/transcode-fn-py



volumes:
  minio-data:
  arango-data:
