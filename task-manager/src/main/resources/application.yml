"%dev":
  quarkus:
    http:
      port: 8090
  oaas:
    log: DEBUG
    tm:
      brokerUrl: http://localhost:8080

#"%prod":
#  quarkus:
#    infinispan-client:
#      auth-username: ${infinispan.username:}
#      auth-password: ${infinispan.password:}
#      server-list: ${infinispan.server:}

oaas:
  log: INFO

quarkus:
  http:
    access-log:
      enabled: true
      pattern: '"%r" %s %b %{RESPONSE_TIME} ms'
      exclude-pattern: /q/.*
    record-request-start-time: true
  log:
    category:
      "org.hpcclab.oaas":
        level: ${oaas.log}
  vertx:
    prefer-native-transport: true
    worker-pool-size: 100
  swagger-ui:
    always-include: true
  smallrye-openapi:
    store-schema-directory: ../doc/tm
  console:
    color: true
  container-image:
    image: ${ci.registry.image:oaas}/task-manager${tag:}
  jib:
    base-jvm-image: eclipse-temurin:17-jre-alpine
  micrometer:
    export:
      json:
        enabled: true
        path: jsonmetrics
  rest-client:
    TaskBrokerService:
      url: ${oaas.tm.brokerUrl}
  native:
    builder-image: quay.io/quarkus/ubi-quarkus-mandrel:22.3-java17
  opentelemetry:
    enabled: false


mp:
  messaging:
    outgoing:
      tasks:
#        enabled: ${oaas.tm.kafkaEnabled}
        connector: smallrye-kafka
        topic: ${oaas.tm.taskTopic}
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
        batch:
          size: 65536
        linger:
          ms: 0
        max:
          in:
            flight:
              requests:
                per:
                  connection: 5
        max-inflight-messages: 0
