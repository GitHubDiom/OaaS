"%dev":
  quarkus:
    http:
      port: 8090
    log:
      category:
        "org.hpcclab.oaas":
          level: DEBUG
  oaas:
    tm:
      brokerUrl: http://localhost:8080

"%prod":
  quarkus:
    infinispan-client:
      auth-username: ${infinispan.username:}
      auth-password: ${infinispan.password:}
      server-list: ${infinispan.server:}
oaas:
  log: INFO

quarkus:
  http:
    access-log:
      enabled: true
      pattern: '"%r" %s %b %{RESPONSE_TIME} ms'
      exclude-pattern: /q/.*
    record-request-start-time: true
  vertx:
    prefer-native-transport: true
    worker-pool-size: 100
  swagger-ui:
    always-include: true
  smallrye-openapi:
    store-schema-directory: ../doc/tm
  index-dependency:
    service-interface:
      artifact-id: service-interface
      group-id: org.hpcclab.oaas
  console:
    color: true
  container-image:
    image: ${ci.registry.image:oaas}/task-manager${tag:}
  jib:
    base-jvm-image: eclipse-temurin:17-jre-alpine
  log:
    category:
      "org.hpcclab.oaas":
        level: ${oaas.log:INFO}
  micrometer:
    export:
      json:
        enabled: true
        path: jsonmetrics
  rest-client:
    BlockingObjectService:
      url: ${oaas.tm.objectControllerUrl}
    TaskBrokerService:
      url: ${oaas.tm.brokerUrl}
  native:
    builder-image: quay.io/quarkus/ubi-quarkus-mandrel:22.0-java17
  opentelemetry:
    enabled: false

#mp:
#  messaging:
#    incoming:
#      task-completions:
#        connector: smallrye-kafka
#        topic: ${oaas.tm.taskCompletionTopic}
#        auto:
#          offset:
#            reset: earliest
#        partitions: ${oaas.tm.taskCompletionPartitions}
#        batch: true
